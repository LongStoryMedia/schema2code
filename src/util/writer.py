import datetime
import os
import sys


class Writer:
    @staticmethod
    def write_to_file(output_content: str, output_file: str, mode: str, create_if_missing: bool, no_overwrite: bool = False) -> bool:  # type: ignore
        """Write the generated types to the specified file"""
        file_exists = os.path.exists(output_file)

        if not file_exists and not create_if_missing:
            print(
                f"Error: Output file '{output_file}' does not exist and creation is disabled", file=sys.stderr)
            return False

        # Check if we should avoid overwriting
        if file_exists and mode != "append" and no_overwrite:
            print(
                f"Error: Output file '{output_file}' exists and --no-overwrite flag is set", file=sys.stderr)
            return False

        # Ensure directory exists
        os.makedirs(os.path.dirname(
            os.path.abspath(output_file)), exist_ok=True)

        write_mode = "a" if mode == "append" and file_exists else "w"

        try:
            with open(output_file, write_mode) as f:
                # Add a separator if we're appending
                if write_mode == "a":
                    f.write("\n\n")
                f.write(output_content)
            return True
        except Exception as e:
            print(f"Error writing to file: {e}", file=sys.stderr)
            return False

    @staticmethod
    def generate_header_comment(language: str) -> str:
        """Generate a header comment indicating the file was generated with schema2code"""
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        if language == "go":
            return f"// Code generated by schema2code at {timestamp}. DO NOT EDIT.\n"
        elif language == "python":
            return f"# Code generated by schema2code at {timestamp}. DO NOT EDIT.\n"
        elif language == "typescript":
            return f"// Code generated by schema2code at {timestamp}. DO NOT EDIT.\n"
        elif language == "csharp" or language == "dotnet":
            return f"// Code generated by schema2code at {timestamp}. DO NOT EDIT.\n"
        else:
            return f"// Code generated by schema2code at {timestamp}. DO NOT EDIT.\n"

    @staticmethod
    def write_multiple_files(file_content_map: dict, mode: str = "create", create_if_missing: bool = True, no_overwrite: bool = False) -> bool:
        """Write multiple files at once. file_content_map is {filename: content}"""
        all_success = True
        for output_file, output_content in file_content_map.items():
            # Skip empty files or files with just package declaration
            if len(output_content.strip().split('\n')) <= 2:
                print(f"Warning: Skipping empty file {output_file}")
                continue

            success = Writer.write_to_file(
                output_content,
                output_file,
                mode,
                create_if_missing,
                no_overwrite
            )
            if not success:
                all_success = False
        return all_success
