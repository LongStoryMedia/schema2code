// Code generated by schema2code at 2025-08-26 22:17:32. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// Request for generating an image
    /// </summary>
    public class ImageGenerateRequest
    {
        /// <summary>
        /// The prompt for image generation
        /// </summary>
        [JsonPropertyName("prompt")]
        public string Prompt { get; set; } = default!;
        /// <summary>
        /// Width of the generated image
        /// </summary>
        [JsonPropertyName("width")]
        public long? Width { get; set; }
        /// <summary>
        /// Height of the generated image
        /// </summary>
        [JsonPropertyName("height")]
        public long? Height { get; set; }
        /// <summary>
        /// Number of inference steps
        /// </summary>
        [JsonPropertyName("inference_steps")]
        public long? InferenceSteps { get; set; }
        /// <summary>
        /// Guidance scale for image generation
        /// </summary>
        [JsonPropertyName("guidance_scale")]
        public double? GuidanceScale { get; set; }
        /// <summary>
        /// Whether to use low memory mode
        /// </summary>
        [JsonPropertyName("low_memory_mode")]
        public bool? LowMemoryMode { get; set; }
        /// <summary>
        /// Negative prompt for image generation
        /// </summary>
        [JsonPropertyName("negative_prompt")]
        public string? NegativePrompt { get; set; }
        /// <summary>
        /// Model to use for image generation
        /// </summary>
        [JsonPropertyName("model")]
        public string Model { get; set; } = default!;
        /// <summary>
        /// List of LoRA models to apply to the image generation
        /// </summary>
        [JsonPropertyName("loras")]
        public List<string>? Loras { get; set; }
        /// <summary>
        /// ID of the image to use as a base for image generation (for img2img)
        /// </summary>
        [JsonPropertyName("image_id")]
        public long? ImageId { get; set; }
        /// <summary>
        /// URL of the image to use as a base for image generation (for img2img)
        /// </summary>
        [JsonPropertyName("url")]
        public string? Url { get; set; }
        /// <summary>
        /// Name of the file to save the generated image as
        /// </summary>
        [JsonPropertyName("filename")]
        public string? Filename { get; set; }
    }
}