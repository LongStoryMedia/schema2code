// Code generated by schema2code at 2025-08-26 22:17:35. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// SocketSession represents the state of a chat session over WebSocket.
    /// </summary>
    public class SocketSession
    {
        /// <summary>
        /// The current stage/state of the chat session (models.SocketStageType)
        /// </summary>
        [JsonPropertyName("state")]
        public SocketStageType State { get; set; } = default!;
        /// <summary>
        /// The ID of the conversation
        /// </summary>
        [JsonPropertyName("conversation_id")]
        public long ConversationId { get; set; } = default!;
        /// <summary>
        /// The user ID associated with the session
        /// </summary>
        [JsonPropertyName("user_id")]
        public string UserId { get; set; } = default!;
        /// <summary>
        /// Reference to the context cancellation function (not serializable, for documentation only)
        /// </summary>
        [JsonPropertyName("cancel_func")]
        public object? CancelFunc { get; set; }
        /// <summary>
        /// Content paused in the session
        /// </summary>
        [JsonPropertyName("paused_content")]
        public string? PausedContent { get; set; }
        /// <summary>
        /// The last message sent or received
        /// </summary>
        [JsonPropertyName("last_message")]
        public string? LastMessage { get; set; }
        /// <summary>
        /// Buffer for the response content
        /// </summary>
        [JsonPropertyName("response_buffer")]
        public string? ResponseBuffer { get; set; }
    }
}