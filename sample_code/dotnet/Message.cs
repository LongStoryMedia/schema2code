// Code generated by schema2code at 2025-08-03 11:47:21. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// Message represents a single exchange in the conversation
    /// </summary>
    public class Message
    {
        /// <summary>
        /// Role of the message sender (e.g., user, assistant)
        /// </summary>
        [JsonPropertyName("role")]
        public MessageRole Role { get; set; } = default!;
        /// <summary>
        /// Content of the message
        /// </summary>
        [JsonPropertyName("content")]
        public List<MessageContent> Content { get; set; } = default!;
        /// <summary>
        /// Optional tool calls associated with the message
        /// </summary>
        [JsonPropertyName("tool_calls")]
        public List<Dictionary<string, object>>? ToolCalls { get; set; }
        /// <summary>
        /// Optional thinking process of the model, if applicable
        /// </summary>
        [JsonPropertyName("thinking")]
        public string? Thinking { get; set; }
        /// <summary>
        /// Unique identifier for the message
        /// </summary>
        [JsonPropertyName("id")]
        public long? Id { get; set; }
        /// <summary>
        /// Timestamp of when the message was created
        /// </summary>
        [JsonPropertyName("created_at")]
        public DateTime? CreatedAt { get; set; }
        /// <summary>
        /// Id of the conversation this message belongs to
        /// </summary>
        [JsonPropertyName("conversation_id")]
        public long ConversationId { get; set; } = default!;
    }
}