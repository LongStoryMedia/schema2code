// Code generated by schema2code at 2025-08-03 11:47:21. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// Memory represents a grouped memory for a user, which can be a summary or a question-answer pair
    /// </summary>
    public class Memory
    {
        /// <summary>
        /// Fragments of memory content
        /// </summary>
        [JsonPropertyName("fragments")]
        public List<MemoryFragment> Fragments { get; set; } = default!;
        /// <summary>
        /// Source type of the memory
        /// </summary>
        [JsonPropertyName("source")]
        public Source Source { get; set; } = default!;
        /// <summary>
        /// Timestamp of when the memory was created
        /// </summary>
        [JsonPropertyName("created_at")]
        public DateTime CreatedAt { get; set; } = default!;
        /// <summary>
        /// Similarity score from vector search
        /// </summary>
        [JsonPropertyName("similarity")]
        public double Similarity { get; set; } = default!;
        /// <summary>
        /// Id of the source document or conversation
        /// </summary>
        [JsonPropertyName("source_id")]
        public long SourceId { get; set; } = default!;
        /// <summary>
        /// Id of the conversation this memory belongs to
        /// </summary>
        [JsonPropertyName("conversation_id")]
        public long? ConversationId { get; set; }
    }
}