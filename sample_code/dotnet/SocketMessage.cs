// Code generated by schema2code at 2025-08-26 22:17:35. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// SocketMessage represents a response sent over WebSocket
    /// </summary>
    public class SocketMessage
    {
        /// <summary>
        /// Unique identifier for the message
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; } = default!;
        /// <summary>
        /// Content of the response
        /// </summary>
        [JsonPropertyName("content")]
        public string? Content { get; set; }
        /// <summary>
        /// Error message if any
        /// </summary>
        [JsonPropertyName("error")]
        public string? Error { get; set; }
        /// <summary>
        /// State of the chat session
        /// </summary>
        [JsonPropertyName("state")]
        public SocketStageType State { get; set; } = default!;
        /// <summary>
        /// Session identifier
        /// </summary>
        [JsonPropertyName("session_id")]
        public string SessionId { get; set; } = default!;
        /// <summary>
        /// Timestamp of the response
        /// </summary>
        [JsonPropertyName("timestamp")]
        public DateTime Timestamp { get; set; } = default!;
        /// <summary>
        /// Type of message
        /// </summary>
        [JsonPropertyName("type")]
        public MessageType Type { get; set; } = default!;
        /// <summary>
        /// Progress percentage of the response, if applicable
        /// </summary>
        [JsonPropertyName("progress")]
        public long? Progress { get; set; }
        /// <summary>
        /// Additional data related to the response, if any
        /// </summary>
        [JsonPropertyName("data")]
        public List<object>? Data { get; set; }
        /// <summary>
        /// Identifier of the conversation associated with the response
        /// </summary>
        [JsonPropertyName("conversation_id")]
        public long? ConversationId { get; set; }
    }
}