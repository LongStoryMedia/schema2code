// Code generated by schema2code at 2025-08-03 11:47:23. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// ResearchTask represents a deep research task
    /// </summary>
    public class ResearchTask
    {
        /// <summary>
        /// Unique identifier for the research task
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; } = default!;
        /// <summary>
        /// Id of the user who owns the task
        /// </summary>
        [JsonPropertyName("user_id")]
        public string UserId { get; set; } = default!;
        /// <summary>
        /// Original research query
        /// </summary>
        [JsonPropertyName("query")]
        public string Query { get; set; } = default!;
        /// <summary>
        /// Model used for the research
        /// </summary>
        [JsonPropertyName("model")]
        public string Model { get; set; } = default!;
        /// <summary>
        /// Id of the conversation associated with this task if any
        /// </summary>
        [JsonPropertyName("conversation_id")]
        public object? ConversationId { get; set; }
        /// <summary>
        /// Current status of the research task
        /// </summary>
        [JsonPropertyName("status")]
        public Status Status { get; set; } = default!;
        /// <summary>
        /// Error message if task failed
        /// </summary>
        [JsonPropertyName("error_message")]
        public object? ErrorMessage { get; set; }
        /// <summary>
        /// Research plan with sub-questions
        /// </summary>
        [JsonPropertyName("plan")]
        public string? Plan { get; set; }
        /// <summary>
        /// Collected results from the research
        /// </summary>
        [JsonPropertyName("results")]
        public List<string>? Results { get; set; }
        /// <summary>
        /// Timestamp of when the task was created
        /// </summary>
        [JsonPropertyName("created_at")]
        public DateTime CreatedAt { get; set; } = default!;
        /// <summary>
        /// Timestamp of when the task was last updated
        /// </summary>
        [JsonPropertyName("updated_at")]
        public DateTime UpdatedAt { get; set; } = default!;
        /// <summary>
        /// Timestamp of when the task was completed
        /// </summary>
        [JsonPropertyName("completed_at")]
        public object? CompletedAt { get; set; }
    }
}