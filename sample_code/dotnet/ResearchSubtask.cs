// Code generated by schema2code at 2025-08-03 11:47:23. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// Subtask within a research task
    /// </summary>
    public class ResearchSubtask
    {
        /// <summary>
        /// Unique identifier for the subtask
        /// </summary>
        [JsonPropertyName("id")]
        public long Id { get; set; } = default!;
        /// <summary>
        /// Id of the parent research task
        /// </summary>
        [JsonPropertyName("task_id")]
        public long TaskId { get; set; } = default!;
        /// <summary>
        /// Id of the research question this subtask addresses
        /// </summary>
        [JsonPropertyName("question_id")]
        public long QuestionId { get; set; } = default!;
        /// <summary>
        /// Current status of the subtask
        /// </summary>
        [JsonPropertyName("status")]
        public Status Status { get; set; } = default!;
        /// <summary>
        /// Information gathered for this subtask
        /// </summary>
        [JsonPropertyName("gathered_info")]
        public List<string> GatheredInfo { get; set; } = default!;
        /// <summary>
        /// Sources of the gathered information
        /// </summary>
        [JsonPropertyName("information_sources")]
        public List<string> InformationSources { get; set; } = default!;
        /// <summary>
        /// Final synthesized answer for this subtask
        /// </summary>
        [JsonPropertyName("synthesized_answer")]
        public object? SynthesizedAnswer { get; set; }
        /// <summary>
        /// Error message if subtask failed
        /// </summary>
        [JsonPropertyName("error_message")]
        public object? ErrorMessage { get; set; }
        /// <summary>
        /// Timestamp of when the subtask was created
        /// </summary>
        [JsonPropertyName("created_at")]
        public DateTime CreatedAt { get; set; } = default!;
        /// <summary>
        /// Timestamp of when the subtask was last updated
        /// </summary>
        [JsonPropertyName("updated_at")]
        public DateTime UpdatedAt { get; set; } = default!;
    }
}