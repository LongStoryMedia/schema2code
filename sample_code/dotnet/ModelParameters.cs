// Code generated by schema2code at 2025-08-03 11:47:22. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// Parameters for configuring a language model
    /// </summary>
    public class ModelParameters
    {
        /// <summary>
        /// Size of the context window
        /// </summary>
        [JsonPropertyName("num_ctx")]
        public long? NumCtx { get; set; }
        /// <summary>
        /// Number of tokens to consider for repetition penalties
        /// </summary>
        [JsonPropertyName("repeat_last_n")]
        public long? RepeatLastN { get; set; }
        /// <summary>
        /// Penalty for repetitions
        /// </summary>
        [JsonPropertyName("repeat_penalty")]
        public double? RepeatPenalty { get; set; }
        /// <summary>
        /// Sampling temperature; higher values produce more creative outputs
        /// </summary>
        [JsonPropertyName("temperature")]
        public double? Temperature { get; set; }
        /// <summary>
        /// Random seed for reproducibility
        /// </summary>
        [JsonPropertyName("seed")]
        public long? Seed { get; set; }
        /// <summary>
        /// Sequences where the model should stop generating
        /// </summary>
        [JsonPropertyName("stop")]
        public List<string>? Stop { get; set; }
        /// <summary>
        /// Maximum number of tokens to predict
        /// </summary>
        [JsonPropertyName("num_predict")]
        public long? NumPredict { get; set; }
        /// <summary>
        /// Limits next token selection to top K options
        /// </summary>
        [JsonPropertyName("top_k")]
        public long? TopK { get; set; }
        /// <summary>
        /// Limits next token selection to tokens comprising the top P probability mass (nucleus sampling)
        /// </summary>
        [JsonPropertyName("top_p")]
        public double? TopP { get; set; }
        /// <summary>
        /// Minimum probability threshold for token selection
        /// </summary>
        [JsonPropertyName("min_p")]
        public double? MinP { get; set; }
    }
}