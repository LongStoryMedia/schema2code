// Code generated by schema2code at 2025-08-03 11:47:19. DO NOT EDIT.

using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

#nullable enable

namespace SchemaTypes
{
    /// <summary>
    /// ChatResponse represents a response from the chat API
    /// </summary>
    public class ChatResponse
    {
        /// <summary>
        /// Indicates whether the generation is complete
        /// </summary>
        [JsonPropertyName("done")]
        public bool Done { get; set; } = default!;
        /// <summary>
        /// The message content and metadata returned by the model
        /// </summary>
        [JsonPropertyName("message")]
        public Message? Message { get; set; }
        /// <summary>
        /// Timestamp when the response was created
        /// </summary>
        [JsonPropertyName("created_at")]
        public DateTime CreatedAt { get; set; } = default!;
        /// <summary>
        /// The name or identifier of the model used for generation
        /// </summary>
        [JsonPropertyName("model")]
        public string Model { get; set; } = default!;
        /// <summary>
        /// Array of numbers representing the tokenized context
        /// </summary>
        [JsonPropertyName("context")]
        public List<double>? Context { get; set; }
        /// <summary>
        /// Specific indicator of how or why the generation finished
        /// </summary>
        [JsonPropertyName("finish_reason")]
        public FinishReason? FinishReason { get; set; }
        /// <summary>
        /// Total time taken for the entire generation process in milliseconds
        /// </summary>
        [JsonPropertyName("total_duration")]
        public double? TotalDuration { get; set; }
        /// <summary>
        /// Time taken to load the model in milliseconds
        /// </summary>
        [JsonPropertyName("load_duration")]
        public double? LoadDuration { get; set; }
        /// <summary>
        /// Number of tokens in the prompt that were evaluated
        /// </summary>
        [JsonPropertyName("prompt_eval_count")]
        public double? PromptEvalCount { get; set; }
        /// <summary>
        /// Time taken to evaluate the prompt tokens in milliseconds
        /// </summary>
        [JsonPropertyName("prompt_eval_duration")]
        public double? PromptEvalDuration { get; set; }
        /// <summary>
        /// Total number of tokens evaluated
        /// </summary>
        [JsonPropertyName("eval_count")]
        public double? EvalCount { get; set; }
        /// <summary>
        /// Time taken for token evaluation in milliseconds
        /// </summary>
        [JsonPropertyName("eval_duration")]
        public double? EvalDuration { get; set; }
    }
}