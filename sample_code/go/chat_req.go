// Code generated by schema2code at 2025-08-03 11:47:24. DO NOT EDIT.

package schema



// ChatReq ChatReq represents a request to the Ollama API
type ChatReq struct {
	Model          string                   `json:"model" yaml:"model"` // Model name, used internally only to set the model name in the request to ollama based on the profile
	Messages       []Message                `json:"messages" yaml:"messages"` // Messages to send to the model, each message is a struct with role and content
	Stream         bool                     `json:"stream" yaml:"stream"` // If true, the response will be streamed back as a series of events
	Format         map[string]interface{}   `json:"format" yaml:"format"` // The format to return a response in. Format can be json or a JSON schema
	ConversationID *int                     `json:"conversation_id" yaml:"conversation_id"` // UI sends camelCase
	KeepAlive      *int                     `json:"keep_alive" yaml:"keep_alive"` // Controls how long the model will stay loaded into memory
	Options        *ModelParameters         `json:"options" yaml:"options"` // Additional model parameters listed in the documentation for the Modelfile such as temperature
	Tools          []map[string]interface{} `json:"tools" yaml:"tools"` // Tools to use for the request, if any
	Think          *bool                    `json:"think" yaml:"think"` // If true, the model will think before responding, useful for complex queries
}
