// Code generated by schema2code at 2025-08-26 22:17:39. DO NOT EDIT.

package schema

import (
	"time"
)

// ResearchSubtaskStatus Current status of the subtask
type ResearchSubtaskStatus string

const (
	ResearchSubtaskStatusPENDING ResearchSubtaskStatus = "PENDING"
	ResearchSubtaskStatusPLANNING ResearchSubtaskStatus = "PLANNING"
	ResearchSubtaskStatusGATHERING ResearchSubtaskStatus = "GATHERING"
	ResearchSubtaskStatusPROCESSING ResearchSubtaskStatus = "PROCESSING"
	ResearchSubtaskStatusSYNTHESIZING ResearchSubtaskStatus = "SYNTHESIZING"
	ResearchSubtaskStatusCOMPLETED ResearchSubtaskStatus = "COMPLETED"
	ResearchSubtaskStatusFAILED ResearchSubtaskStatus = "FAILED"
	ResearchSubtaskStatusCANCELED ResearchSubtaskStatus = "CANCELED"
)
// ResearchSubtask Subtask within a research task
type ResearchSubtask struct {
	ID                 int         `json:"id" yaml:"id"` // Unique identifier for the subtask
	TaskID             int         `json:"task_id" yaml:"task_id"` // Id of the parent research task
	QuestionID         int         `json:"question_id" yaml:"question_id"` // Id of the research question this subtask addresses
	Status             ResearchSubtaskStatus `json:"status" yaml:"status"` // Current status of the subtask
	GatheredInfo       []string    `json:"gathered_info" yaml:"gathered_info"` // Information gathered for this subtask
	InformationSources []string    `json:"information_sources" yaml:"information_sources"` // Sources of the gathered information
	SynthesizedAnswer  interface{} `json:"synthesized_answer" yaml:"synthesized_answer"` // Final synthesized answer for this subtask
	ErrorMessage       interface{} `json:"error_message" yaml:"error_message"` // Error message if subtask failed
	CreatedAt          time.Time   `json:"created_at" yaml:"created_at"` // Timestamp of when the subtask was created
	UpdatedAt          time.Time   `json:"updated_at" yaml:"updated_at"` // Timestamp of when the subtask was last updated
}
