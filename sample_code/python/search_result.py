# Code generated by schema2code at 2025-08-26 22:17:53. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from .search_result_content import SearchResultContent
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class SearchResult(BaseModel):
    """Search result from a web query"""
    is_from_url_in_user_query: bool = Field(..., description="Indicates if this result is from a URL specified in the user query")
    """Indicates if this result is from a URL specified in the user query"""
    query: str = Field(..., description="The search query that produced these results")
    """The search query that produced these results"""
    contents: Optional[List[SearchResultContent]] = Field(default=None, description="Content items found in the search")
    """Content items found in the search"""
    error: Optional[str] = Field(default=None, description="Error message if the search failed")
    """Error message if the search failed"""

    class Config:
        extra = "ignore"