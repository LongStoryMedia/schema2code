# Code generated by schema2code at 2025-08-26 22:17:46. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class Conversation(BaseModel):
    """Conversation represents a conversation between a user and the LLM"""
    id: int = Field(..., description="Unique identifier for the conversation")
    """Unique identifier for the conversation"""
    user_id: str = Field(..., description="Id of the user who owns the conversation")
    """Id of the user who owns the conversation"""
    title: str = Field(..., description="Title of the conversation")
    """Title of the conversation"""
    model: str = Field(..., description="Model used for the conversation")
    """Model used for the conversation"""
    created_at: datetime = Field(..., description="Timestamp of when the conversation was created")
    """Timestamp of when the conversation was created"""
    updated_at: datetime = Field(..., description="Timestamp of when the conversation was last updated")
    """Timestamp of when the conversation was last updated"""

    class Config:
        extra = "ignore"