# Code generated by schema2code at 2025-08-26 22:17:47. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class EmbeddingReq(BaseModel):
    """EmbeddingReq represents a request to the Ollama embeddings API"""
    model: str = Field(..., description="Model name")
    """Model name"""
    input: List[str] = Field(..., description="Text to generate embeddings for")
    """Text to generate embeddings for"""
    truncate: Optional[bool] = Field(default=None, description="Whether to truncate the input to the model's maximum length")
    """Whether to truncate the input to the model's maximum length"""
    options: Optional[Dict[str, Any]] = Field(default=None, description="Additional model parameters listed in the documentation for the Modelfile such as temperature")
    """Additional model parameters listed in the documentation for the Modelfile such as temperature"""
    keep_alive: Optional[int] = Field(default=None, description="Controls how long the model will stay loaded into memory")
    """Controls how long the model will stay loaded into memory"""

    class Config:
        extra = "ignore"