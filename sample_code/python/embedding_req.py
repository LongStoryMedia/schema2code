# Code generated by schema2code at 2025-08-03 11:47:11. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""EmbeddingReq represents a request to the Ollama embeddings API"""
class EmbeddingReq(BaseModel):
    # Model name
    model: str = Field(..., description="Model name")
    # Text to generate embeddings for
    input: List[str] = Field(..., description="Text to generate embeddings for")
    # Whether to truncate the input to the model's maximum length
    truncate: Optional[bool] = Field(None, description="Whether to truncate the input to the model's maximum length")
    # Additional model parameters listed in the documentation for the Modelfile such as temperature
    options: Optional[Dict[str, Any]] = Field(None, description="Additional model parameters listed in the documentation for the Modelfile such as temperature")
    # Controls how long the model will stay loaded into memory
    keep_alive: Optional[int] = Field(None, description="Controls how long the model will stay loaded into memory")

    class Config:
        extra = "ignore"