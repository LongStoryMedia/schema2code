# Code generated by schema2code at 2025-08-03 11:47:12. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""Metadata for an image generated on the system."""
class ImageMetadata(BaseModel):
    # Unique identifier for the image.
    id: Optional[int] = Field(None, description="Unique identifier for the image.")
    # filename (including path) of the image.
    filename: str = Field(..., description="filename (including path) of the image.")
    # URL or path to the thumbnail version of the image.
    thumbnail: str = Field(..., description="URL or path to the thumbnail version of the image.")
    # Width of the image in pixels.
    width: int = Field(..., description="Width of the image in pixels.")
    # Height of the image in pixels.
    height: int = Field(..., description="Height of the image in pixels.")
    # Format of the image file.
    format: str = Field(..., description="Format of the image file.")
    # Unique identifier for the user who the image was generated for.
    user_id: str = Field(..., description="Unique identifier for the user who the image was generated for.")
    # Unique identifier for the conversation associated with the image.
    conversation_id: Optional[int] = Field(None, description="Unique identifier for the conversation associated with the image.")
    # Timestamp when the image was created.
    created_at: datetime = Field(..., description="Timestamp when the image was created.")
    # URL for viewing the image.
    view_url: Optional[str] = Field(None, description="URL for viewing the image.")
    # URL for downloading the image.
    download_url: Optional[str] = Field(None, description="URL for downloading the image.")

    class Config:
        extra = "ignore"