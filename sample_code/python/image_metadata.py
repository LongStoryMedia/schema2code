# Code generated by schema2code at 2025-08-26 22:17:48. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class ImageMetadata(BaseModel):
    """Metadata for an image generated on the system."""
    id: Optional[int] = Field(default=None, description="Unique identifier for the image.")
    """Unique identifier for the image."""
    filename: str = Field(..., description="filename (including path) of the image.")
    """filename (including path) of the image."""
    thumbnail: str = Field(..., description="URL or path to the thumbnail version of the image.")
    """URL or path to the thumbnail version of the image."""
    width: int = Field(..., description="Width of the image in pixels.")
    """Width of the image in pixels."""
    height: int = Field(..., description="Height of the image in pixels.")
    """Height of the image in pixels."""
    format: str = Field(..., description="Format of the image file.")
    """Format of the image file."""
    user_id: str = Field(..., description="Unique identifier for the user who the image was generated for.")
    """Unique identifier for the user who the image was generated for."""
    conversation_id: Optional[int] = Field(default=None, description="Unique identifier for the conversation associated with the image.")
    """Unique identifier for the conversation associated with the image."""
    created_at: datetime = Field(..., description="Timestamp when the image was created.")
    """Timestamp when the image was created."""
    view_url: Optional[str] = Field(default=None, description="URL for viewing the image.")
    """URL for viewing the image."""
    download_url: Optional[str] = Field(default=None, description="URL for downloading the image.")
    """URL for downloading the image."""

    class Config:
        extra = "ignore"