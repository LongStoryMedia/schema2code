# Code generated by schema2code at 2025-08-26 22:17:46. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from .auth_config import AuthConfig
from .database_config import DatabaseConfig
from .image_generation_config import ImageGenerationConfig
from .inference_service import InferenceService
from .inference_service_config import InferenceServiceConfig
from .internal_config import InternalConfig
from .memory_config import MemoryConfig
from .model_profile_config import ModelProfileConfig
from .preferences_config import PreferencesConfig
from .rabbitmq_config import RabbitmqConfig
from .redis_config import RedisConfig
from .refinement_config import RefinementConfig
from .server_config import ServerConfig
from .summarization_config import SummarizationConfig
from .web_search_config import WebSearchConfig
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class Config(BaseModel):
    """Application configuration"""
    server: ServerConfig = Field(...)
    database: DatabaseConfig = Field(...)
    redis: RedisConfig = Field(...)
    rabbitmq: RabbitmqConfig = Field(...)
    auth: AuthConfig = Field(...)
    inference_services: InferenceServiceConfig = Field(...)
    summarization: SummarizationConfig = Field(...)
    memory: MemoryConfig = Field(...)
    web_search: WebSearchConfig = Field(...)
    preferences: PreferencesConfig = Field(...)
    model_profiles: ModelProfileConfig = Field(...)
    refinement: RefinementConfig = Field(...)
    image_generation: ImageGenerationConfig = Field(...)
    log_level: str = Field(..., description="Log level")
    """Log level"""
    internal: Optional[InternalConfig] = Field(default=None)

    class Config:
        extra = "ignore"