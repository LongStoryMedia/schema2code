# Code generated by schema2code at 2025-08-03 11:47:17. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from .socket_stage_type import SocketStageType
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""SocketSession represents the state of a chat session over WebSocket."""
class SocketSession(BaseModel):
    # The current stage/state of the chat session (models.SocketStageType)
    state: SocketStageType = Field(..., description="The current stage/state of the chat session (models.SocketStageType)")
    # The ID of the conversation
    conversation_id: int = Field(..., description="The ID of the conversation")
    # The user ID associated with the session
    user_id: str = Field(..., description="The user ID associated with the session")
    # Reference to the context cancellation function (not serializable, for documentation only)
    cancel_func: Optional[Any] = Field(None, description="Reference to the context cancellation function (not serializable, for documentation only)")
    # Content paused in the session
    paused_content: Optional[str] = Field(None, description="Content paused in the session")
    # The last message sent or received
    last_message: Optional[str] = Field(None, description="The last message sent or received")
    # Buffer for the response content
    response_buffer: Optional[str] = Field(None, description="Buffer for the response content")

    class Config:
        extra = "ignore"