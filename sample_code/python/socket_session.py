# Code generated by schema2code at 2025-08-26 22:17:54. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from .socket_stage_type import SocketStageType
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class SocketSession(BaseModel):
    """SocketSession represents the state of a chat session over WebSocket."""
    state: SocketStageType = Field(..., description="The current stage/state of the chat session (models.SocketStageType)")
    """The current stage/state of the chat session (models.SocketStageType)"""
    conversation_id: int = Field(..., description="The ID of the conversation")
    """The ID of the conversation"""
    user_id: str = Field(..., description="The user ID associated with the session")
    """The user ID associated with the session"""
    cancel_func: Optional[Any] = Field(default=None, description="Reference to the context cancellation function (not serializable, for documentation only)")
    """Reference to the context cancellation function (not serializable, for documentation only)"""
    paused_content: Optional[str] = Field(default=None, description="Content paused in the session")
    """Content paused in the session"""
    last_message: Optional[str] = Field(default=None, description="The last message sent or received")
    """The last message sent or received"""
    response_buffer: Optional[str] = Field(default=None, description="Buffer for the response content")
    """Buffer for the response content"""

    class Config:
        extra = "ignore"