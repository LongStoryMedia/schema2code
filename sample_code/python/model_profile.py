# Code generated by schema2code at 2025-08-26 22:17:51. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from .model_parameters import ModelParameters
from .model_profile_image_settings import ModelProfileImageSettings
import uuid
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class ModelProfile(BaseModel):
    """ModelProfile represents a model profile used for generating responses"""
    id: uuid.UUID = Field(..., description="Unique identifier for the profile")
    """Unique identifier for the profile"""
    user_id: str = Field(..., description="Id of the user who owns the profile")
    """Id of the user who owns the profile"""
    name: str = Field(..., description="Name of the profile")
    """Name of the profile"""
    description: Optional[str] = Field(default=None, description="Description of the profile")
    """Description of the profile"""
    model_name: str = Field(..., description="Name of the model to use")
    """Name of the model to use"""
    parameters: ModelParameters = Field(..., description="Parameters for configuring the model")
    """Parameters for configuring the model"""
    system_prompt: str = Field(..., description="System prompt to send to the model")
    """System prompt to send to the model"""
    created_at: datetime = Field(..., description="Timestamp of when the profile was created")
    """Timestamp of when the profile was created"""
    updated_at: datetime = Field(..., description="Timestamp of when the profile was last updated")
    """Timestamp of when the profile was last updated"""
    model_version: Optional[str] = Field(default=None, description="Version of the model")
    """Version of the model"""
    type: int = Field(..., description="Type of the model profile")
    """Type of the model profile"""
    image_settings: Optional[ModelProfileImageSettings] = Field(default=None, description="Image settings for the model profile")
    """Image settings for the model profile"""
    think: Optional[bool] = Field(default=None, description="Whether to use think mode for the model profile")
    """Whether to use think mode for the model profile"""

    class Config:
        extra = "ignore"