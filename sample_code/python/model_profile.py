# Code generated by schema2code at 2025-08-03 11:47:15. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from .model_parameters import ModelParameters
from .model_profile_image_settings import ModelProfileImageSettings
import uuid
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""ModelProfile represents a model profile used for generating responses"""
class ModelProfile(BaseModel):
    # Unique identifier for the profile
    id: uuid.UUID = Field(..., description="Unique identifier for the profile")
    # Id of the user who owns the profile
    user_id: str = Field(..., description="Id of the user who owns the profile")
    # Name of the profile
    name: str = Field(..., description="Name of the profile")
    # Description of the profile
    description: Optional[str] = Field(None, description="Description of the profile")
    # Name of the model to use
    model_name: str = Field(..., description="Name of the model to use")
    # Parameters for configuring the model
    parameters: ModelParameters = Field(..., description="Parameters for configuring the model")
    # System prompt to send to the model
    system_prompt: str = Field(..., description="System prompt to send to the model")
    # Timestamp of when the profile was created
    created_at: datetime = Field(..., description="Timestamp of when the profile was created")
    # Timestamp of when the profile was last updated
    updated_at: datetime = Field(..., description="Timestamp of when the profile was last updated")
    # Version of the model
    model_version: Optional[str] = Field(None, description="Version of the model")
    # Type of the model profile
    type: int = Field(..., description="Type of the model profile")
    # Image settings for the model profile
    image_settings: Optional[ModelProfileImageSettings] = Field(None, description="Image settings for the model profile")
    # Whether to use think mode for the model profile
    think: Optional[bool] = Field(None, description="Whether to use think mode for the model profile")

    class Config:
        extra = "ignore"