# Code generated by schema2code at 2025-08-26 22:17:53. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class ResearchQuestionResult(BaseModel):
    """Result of processing a sub-question in a research task"""
    id: int = Field(..., description="Unique identifier for the question result")
    """Unique identifier for the question result"""
    question: str = Field(..., description="The question that was investigated")
    """The question that was investigated"""
    synthesized_answer: Optional[str] = Field(default=None, description="Synthesized answer to the question")
    """Synthesized answer to the question"""
    error_message: Optional[str] = Field(default=None, description="Error message if processing failed")
    """Error message if processing failed"""

    class Config:
        extra = "ignore"