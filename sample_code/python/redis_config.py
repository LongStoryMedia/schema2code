# Code generated by schema2code at 2025-08-26 22:17:52. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class RedisConfig(BaseModel):
    """Redis configuration"""
    host: str = Field(..., description="Redis host")
    """Redis host"""
    port: int = Field(..., description="Redis port")
    """Redis port"""
    password: str = Field(..., description="Redis password")
    """Redis password"""
    db: int = Field(..., description="Redis database index")
    """Redis database index"""
    enabled: bool = Field(..., description="Whether Redis is enabled")
    """Whether Redis is enabled"""
    conversation_ttl: int = Field(..., description="Conversation TTL")
    """Conversation TTL"""
    message_ttl: int = Field(..., description="Message TTL")
    """Message TTL"""
    summary_ttl: int = Field(..., description="Summary TTL")
    """Summary TTL"""
    pool_size: int = Field(..., description="Connection pool size")
    """Connection pool size"""
    min_idle_connections: int = Field(..., description="Minimum idle connections")
    """Minimum idle connections"""
    connect_timeout: int = Field(..., description="Connection timeout")
    """Connection timeout"""

    class Config:
        extra = "ignore"