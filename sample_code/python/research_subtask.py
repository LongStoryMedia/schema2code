# Code generated by schema2code at 2025-08-03 11:47:16. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""Subtask within a research task"""
class ResearchSubtask(BaseModel):
    # Unique identifier for the subtask
    id: int = Field(..., description="Unique identifier for the subtask")
    # Id of the parent research task
    task_id: int = Field(..., description="Id of the parent research task")
    # Id of the research question this subtask addresses
    question_id: int = Field(..., description="Id of the research question this subtask addresses")
    # Current status of the subtask
    status: str = Field(..., description="Current status of the subtask")
    # Information gathered for this subtask
    gathered_info: List[str] = Field(..., description="Information gathered for this subtask")
    # Sources of the gathered information
    information_sources: List[str] = Field(..., description="Sources of the gathered information")
    # Final synthesized answer for this subtask
    synthesized_answer: Optional[Any] = Field(None, description="Final synthesized answer for this subtask")
    # Error message if subtask failed
    error_message: Optional[Any] = Field(None, description="Error message if subtask failed")
    # Timestamp of when the subtask was created
    created_at: datetime = Field(..., description="Timestamp of when the subtask was created")
    # Timestamp of when the subtask was last updated
    updated_at: datetime = Field(..., description="Timestamp of when the subtask was last updated")

    class Config:
        extra = "ignore"