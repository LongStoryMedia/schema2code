# Code generated by schema2code at 2025-08-26 22:17:53. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr, conint, confloat



class ResearchSubtask(BaseModel):
    """Subtask within a research task"""
    id: int = Field(..., description="Unique identifier for the subtask")
    """Unique identifier for the subtask"""
    task_id: int = Field(..., description="Id of the parent research task")
    """Id of the parent research task"""
    question_id: int = Field(..., description="Id of the research question this subtask addresses")
    """Id of the research question this subtask addresses"""
    status: str = Field(..., description="Current status of the subtask")
    """Current status of the subtask"""
    gathered_info: List[str] = Field(..., description="Information gathered for this subtask")
    """Information gathered for this subtask"""
    information_sources: List[str] = Field(..., description="Sources of the gathered information")
    """Sources of the gathered information"""
    synthesized_answer: Optional[Any] = Field(default=None, description="Final synthesized answer for this subtask")
    """Final synthesized answer for this subtask"""
    error_message: Optional[Any] = Field(default=None, description="Error message if subtask failed")
    """Error message if subtask failed"""
    created_at: datetime = Field(..., description="Timestamp of when the subtask was created")
    """Timestamp of when the subtask was created"""
    updated_at: datetime = Field(..., description="Timestamp of when the subtask was last updated")
    """Timestamp of when the subtask was last updated"""

    class Config:
        extra = "ignore"