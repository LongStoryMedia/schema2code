# Code generated by schema2code at 2025-08-03 11:47:14. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""ModelDetails contains additional information about a model"""
class ModelDetails(BaseModel):
    # Identifier of the parent model if this is a derivative
    parent_model: Optional[str] = Field(None, description="Identifier of the parent model if this is a derivative")
    # Format of the model file (e.g., gguf)
    format: str = Field(..., description="Format of the model file (e.g., gguf)")
    # Path to the GGUF file if applicable
    gguf_file: Optional[str] = Field(None, description="Path to the GGUF file if applicable")
    # Primary model family this belongs to (e.g., llama, phi3)
    family: str = Field(..., description="Primary model family this belongs to (e.g., llama, phi3)")
    # All model families this belongs to
    families: List[str] = Field(..., description="All model families this belongs to")
    # Size of model parameters (e.g., '7.2B')
    parameter_size: str = Field(..., description="Size of model parameters (e.g., '7.2B')")
    # Level of quantization applied to the model (e.g., 'Q4_0')
    quantization_level: Optional[str] = Field(None, description="Level of quantization applied to the model (e.g., 'Q4_0')")
    # Data type of the model (e.g., 'float16', 'bfloat16')
    dtype: Optional[str] = Field(None, description="Data type of the model (e.g., 'float16', 'bfloat16')")
    # Precision of the model (e.g., 'fp16', 'bf16')
    precision: Optional[str] = Field(None, description="Precision of the model (e.g., 'fp16', 'bf16')")
    # Specialization of the model (e.g., 'LoRA', 'Embedding', 'TextToImage', 'Audio', 'Vision')
    specialization: Optional[str] = Field(None, description="Specialization of the model (e.g., 'LoRA', 'Embedding', 'TextToImage', 'Audio', 'Vision')")
    # Description of the model
    description: Optional[str] = Field(None, description="Description of the model")
    # Weight of the model (applies to LoRA models)
    weight: Optional[float] = Field(None, description="Weight of the model (applies to LoRA models)")

    class Config:
        extra = "ignore"